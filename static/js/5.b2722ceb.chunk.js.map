{"version":3,"sources":["components/Element.tsx","assets/downarrow.svg","pages/LinkedStack.tsx"],"names":["Element","module","exports","ControllerWrapper","ElementWrapper","Arrow","useState","arr","setArr","pushItem","val","Math","floor","random","toString","key","color","type","onClick","length","Swal","fire","slice","map","v","style","backgroundColor","src","arrow","reverse"],"mappings":"uJAEA,IAAMA,EAAO,wKASEA,O,mBCXfC,EAAOC,QAAU,IAA0B,uC,oICO3C,IAAMC,EAAiB,sFAIjBC,EAAc,qIAOdC,EAAK,+EAII,qBAAO,IAAD,EACGC,mBAAyB,IAD5B,mBACZC,EADY,KACPC,EADO,KAObC,EAAW,WACfD,GAAO,SAACD,GAAD,4BAAaA,GAAb,CAAkB,CACvBG,IAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAgBC,WACrCC,IAAKJ,KAAKC,MAAMD,KAAKE,UAAY,YAAM,GAAI,IAAIC,SAAS,IACxDE,MAAOL,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,WAYzD,OACE,8BACE,YAACX,EAAD,KAKE,sBAAQc,KAAK,SAASC,QA3Bf,WACXT,MA0BI,KACA,sBAAQQ,KAAK,SAASC,QAhBhB,WACNX,EAAIY,QAAU,EAChBC,IAAKC,KAAK,QAAS,cAAe,SAGpCb,GAAO,SAACD,GAAD,OAASA,EAAIe,MAAM,GAAI,QAW1B,MAEDf,EAAIgB,KAAI,SAACC,GAAD,OACP,YAACpB,EAAD,CAAgBW,IAAKS,EAAET,KACrB,YAAC,IAAD,CAASU,MAAO,CAAEC,gBAAgB,IAAD,OAAMF,EAAER,SAAYQ,EAAEd,KACvD,YAACL,EAAD,CAAOsB,IAAKC,UAEbC,UACH,YAACzB,EAAD","file":"static/js/5.b2722ceb.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst Element = styled.div`\n  width: 150px;\n  height: 50px;\n  border: 1px solid black;\n  box-sizing: border-box;\n  display: grid;\n  place-items: center;\n`;\n\nexport default Element;\n","module.exports = __webpack_public_path__ + \"static/media/downarrow.7d3062a3.svg\";","import styled from '@emotion/styled';\nimport React, { useState } from 'react';\nimport Swal from 'sweetalert2';\nimport Element from '../components/Element';\nimport arrow from '../assets/downarrow.svg';\nimport { ElementProps } from '../types/element';\n\nconst ControllerWrapper = styled.div`\n  margin-bottom: 10px;\n`;\n\nconst ElementWrapper = styled.div`\n  width: 150px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Arrow = styled.img`\n  height: 30px;\n`;\n\nexport default () => {\n  const [arr, setArr] = useState<ElementProps[]>([]);\n\n  const push = () => {\n    pushItem();\n  };\n\n  const pushItem = () => {\n    setArr((arr) => [...arr, {\n      val: Math.floor(Math.random() * 100).toString(),\n      key: Math.floor(Math.random() * (16 ** 8 - 1)).toString(16),\n      color: Math.floor(Math.random() * 16777215).toString(16),\n    }]);\n  };\n\n  const pop = () => {\n    if (arr.length <= 0) {\n      Swal.fire('Error', 'Stack Empty', 'error');\n      return;\n    }\n    setArr((arr) => arr.slice(0, -1));\n  };\n\n  return (\n    <>\n      <ControllerWrapper>\n        {/* <div>\n          <label>step: </label>\n          <input type=\"checkbox\" checked={step} onChange={(e) => setStep(e.target.checked)} />\n        </div> */}\n        <button type=\"button\" onClick={push}>+</button>\n        <button type=\"button\" onClick={pop}>-</button>\n      </ControllerWrapper>\n      {arr.map((v) => (\n        <ElementWrapper key={v.key}>\n          <Element style={{ backgroundColor: `#${v.color}` }}>{v.val}</Element>\n          <Arrow src={arrow} />\n        </ElementWrapper>\n      )).reverse()}\n      <ElementWrapper>\n        NULL\n      </ElementWrapper>\n    </>\n  );\n};\n"],"sourceRoot":""}